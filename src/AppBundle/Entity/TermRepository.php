<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TermRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TermRepository extends EntityRepository
{

    /**
     * Mainly used to generate the complete word lists
     * @todo cache this query result
     *
     * @return array
     */
    public function findAllWithCategory()
    {
        $qb = $this->createQueryBuilder("t")
                ->select("t", "c")
                ->leftJoin("t.category", "c")
                ->addOrderBy("t.name", "ASC");

        return $qb->getQuery()->getResult();
    }

    /**
     * Finds the 30 terms with most votes
     * @todo move $maxResults in method arguments
     *
     * @return array
     */
    public function findBestOf()
    {
        $qb = $this->createQueryBuilder("t")
            ->select("t", "c", "d")
            ->leftJoin("t.category", "c")
            ->leftJoin("t.definitions", "d")
            ->addOrderBy("t.votesCount", "DESC")
            ->setMaxResults(30);

        return $qb->getQuery()->getResult();
    }

    /**
     * Gets an array of terms id having at least one example.
     *
     * Used for word of the day generation
     *
     * @todo better filtering of quality (on votes, on definition number, etc.)
     *
     * @return array
     */
    public function findAllQualityWordIds()
    {
        $qb = $this->createQueryBuilder("t")
            ->select("t.id")
            ->leftJoin("t.examples", "e")
            ->groupBy("t")
            ->having("COUNT(e) > 0");
        $query = $qb->getQuery();

        $arrayResult = $query->getScalarResult();
        return $arrayResult;
    }


}
